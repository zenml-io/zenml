steps:
  # build client base image - python 3.9
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - |
        docker build \
          --platform linux/amd64 \
          --build-arg ZENML_VERSION=$TAG_NAME \
          --build-arg PYTHON_VERSION=3.9 \
          --target client \
          -f docker/base.Dockerfile . \
          -t $$USERNAME/zenml:$TAG_NAME-py3.9

        # use latest tags only for official releases
        if [[ $TAG_NAME =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)$ ]]; then
          docker tag $$USERNAME/zenml:$TAG_NAME-py3.9 $$USERNAME/zenml:py3.9
        fi
    id: build-base-3.9
    waitFor: ['-']
    entrypoint: bash
    secretEnv:
      - USERNAME

  # build client base image - python 3.10
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - |
        docker build \
          --platform linux/amd64 \
          --build-arg ZENML_VERSION=$TAG_NAME \
          --build-arg PYTHON_VERSION=3.10 \
          --target client \
          -f docker/base.Dockerfile . \
          -t $$USERNAME/zenml:$TAG_NAME-py3.10

        # use latest tags only for official releases
        if [[ $TAG_NAME =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)$ ]]; then
          docker tag $$USERNAME/zenml:$TAG_NAME-py3.10 $$USERNAME/zenml:py3.10
        fi
    id: build-base-3.10
    waitFor: ['-']
    entrypoint: bash
    secretEnv:
      - USERNAME

  # build client base image - python 3.11
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - |
        docker build \
          --platform linux/amd64 \
          --build-arg ZENML_VERSION=$TAG_NAME \
          --build-arg PYTHON_VERSION=3.11 \
          --target client \
          -f docker/base.Dockerfile . \
          -t $$USERNAME/zenml:$TAG_NAME-py3.11 \
          -t $$USERNAME/zenml:$TAG_NAME

        # use latest tags only for official releases
        if [[ $TAG_NAME =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)$ ]]; then
          docker tag $$USERNAME/zenml:$TAG_NAME-py3.11 $$USERNAME/zenml:py3.11
          docker tag $$USERNAME/zenml:$TAG_NAME-py3.11 $$USERNAME/zenml:latest
        fi
    id: build-base-3.11
    waitFor: ['-']
    entrypoint: bash
    secretEnv:
      - USERNAME
  
  # build client base image - python 3.12
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - |
        docker build \
          --platform linux/amd64 \
          --build-arg ZENML_VERSION=$TAG_NAME \
          --build-arg PYTHON_VERSION=3.12 \
          --target client \
          -f docker/base.Dockerfile . \
          -t $$USERNAME/zenml:$TAG_NAME-py3.12

        # use latest tags only for official releases
        if [[ $TAG_NAME =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)$ ]]; then
          docker tag $$USERNAME/zenml:$TAG_NAME-py3.12 $$USERNAME/zenml:py3.12
        fi
    id: build-base-3.12
    waitFor: ['-']
    entrypoint: bash
    secretEnv:
      - USERNAME

  # build server image - python 3.11 only
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - |
        docker build \
        --platform linux/amd64 \
        --build-arg ZENML_VERSION=$TAG_NAME \
        --build-arg PYTHON_VERSION=3.11 \
        --target server \
        -f docker/base.Dockerfile . \
        -t $$USERNAME/zenml-server:$TAG_NAME

        # use latest tags only for official releases
        if [[ $TAG_NAME =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)$ ]]; then
          docker tag $$USERNAME/zenml-server:$TAG_NAME $$USERNAME/zenml-server:latest
        fi         
    id: build-server
    waitFor: ['-']
    entrypoint: bash
    secretEnv:
      - USERNAME
  
  # login to Dockerhub
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - docker login --username=$$USERNAME --password=$$PASSWORD
    id: docker-login
    entrypoint: bash
    secretEnv:
      - USERNAME
      - PASSWORD

  # push base images
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - docker push --all-tags $$USERNAME/zenml
    id: push-base
    waitFor:
      - docker-login
      - build-base-3.9
      - build-base-3.10
      - build-base-3.11
      - build-base-3.12
    entrypoint: bash
    secretEnv:
      - USERNAME

  # push server images
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - docker push --all-tags $$USERNAME/zenml-server
    id: push-server
    waitFor:
      - build-server
      - docker-login
    entrypoint: bash
    secretEnv:
      - USERNAME

  # build client quickstart gcp image - python 3.11
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - |
        docker build \
          --platform linux/amd64 \
          --build-arg ZENML_VERSION=$TAG_NAME \
          --build-arg PYTHON_VERSION=3.11 \
          --build-arg CLOUD_PROVIDER=gcp \
          -f docker/zenml-quickstart.Dockerfile . \
          -t $$USERNAME/zenml-public-pipelines:quickstart-$TAG_NAME-py3.11-gcp      
    id: build-quickstart-3.11-gcp
    waitFor: [ 'push-base' ]
    entrypoint: bash
    secretEnv:
      - USERNAME

  # build client quickstart aws image - python 3.11
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - |
        docker build \
          --platform linux/amd64 \
          --build-arg ZENML_VERSION=$TAG_NAME \
          --build-arg PYTHON_VERSION=3.11 \
          --build-arg CLOUD_PROVIDER=aws \
          -f docker/zenml-quickstart.Dockerfile . \
          -t $$USERNAME/zenml-public-pipelines:quickstart-$TAG_NAME-py3.11-aws
    id: build-quickstart-3.11-aws
    waitFor: [ 'push-base' ]
    entrypoint: bash
    secretEnv:
      - USERNAME

  # build client quickstart azure image - python 3.11
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - |
        docker build \
          --platform linux/amd64 \
          --build-arg ZENML_VERSION=$TAG_NAME \
          --build-arg PYTHON_VERSION=3.11 \
          --build-arg CLOUD_PROVIDER=azure \
          -f docker/zenml-quickstart.Dockerfile . \
          -t $$USERNAME/zenml-public-pipelines:quickstart-$TAG_NAME-py3.11-azure
    id: build-quickstart-3.11-azure
    waitFor: [ 'push-base' ]
    entrypoint: bash
    secretEnv:
      - USERNAME

  # push quickstart images
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - docker push --all-tags $$USERNAME/zenml-public-pipelines
    id: push-quickstart
    waitFor:
      - build-quickstart-3.11-gcp
      - build-quickstart-3.11-aws
      - build-quickstart-3.11-azure
      - docker-login
    entrypoint: bash
    secretEnv:
      - USERNAME

timeout: 3600s
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/docker-password/versions/1
      env: PASSWORD
    - versionName: projects/$PROJECT_ID/secrets/docker-username/versions/1
      env: USERNAME
