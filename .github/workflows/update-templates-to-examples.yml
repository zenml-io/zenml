---
name: Auto-update all templates
on:
  workflow_call:
    inputs:
      os:
        description: OS
        type: string
        required: true
      python-version:
        description: Python version
        type: string
        required: true
  workflow_dispatch:
    inputs:
      os:
        description: OS
        type: choice
        options: [ubuntu-latest, macos-13, windows-latest]
        required: false
        default: ubuntu-latest
      python-version:
        description: Python version
        type: choice
        options: ['3.9', '3.10', '3.11', '3.12']
        required: false
        default: '3.11'
jobs:
  update-e2e-batch-template-to-examples:
    name: update-e2e-batch-template-to-examples
    runs-on: ${{ inputs.os }}
    env:
      ZENML_DEBUG: 1
      ZENML_ANALYTICS_OPT_IN: false
      PYTHONIOENCODING: utf-8
      OBJC_DISABLE_INITIALIZE_FORK_SAFETY: 'YES'
    if: github.event_name == 'pull_request' && ! startsWith(github.event.head_commit.message,
      'GitBook:')
    defaults:
      run:
        shell: bash
    steps:
      - name: Run template tests for zenml-io/template-e2e-batch
        uses: zenml-io/template-e2e-batch/.github/actions/e2e_template_test@main
        with:
          python-version: ${{ inputs.python-version }}
          stack-name: local
          ref-zenml: ${{ github.ref }}
          ref-template: 2024.11.28  # Make sure it is aligned with ZENML_PROJECT_TEMPLATES from src/zenml/cli/base.py
      - name: Clean-up
        run: |
          rm -rf ./local_checkout
      - name: message-on-error
        if: failure()
        run: |
          echo "::error title=zenml-io/template-e2e-batch project template testing failed with new version of ZenML core!::\
            Breaking changes affecting templates have been introduced. To mitigate this issue,\
            please make the code in zenml-io/template-e2e-batch compatible with new version of\
            ZenML core, release it and update release tag in zenml.cli.base.ZENML_PROJECT_TEMPLATES"
      - uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Check-out fresh E2E template
        run: |
          rm -rf examples/e2e
          mkdir -p examples/e2e
          printf 'info@zenml.io' | zenml init --path examples/e2e --template e2e_batch --template-with-defaults
          pip install yamlfix
          bash scripts/format.sh examples/e2e
      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet "origin/${{ github.event.pull_request.head.ref }}"; then
            echo "No active Git changes found."
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "vvv Active Git changes found vvv"
            echo "changes=true" >> $GITHUB_OUTPUT
            git diff "origin/${{ github.event.pull_request.head.ref }}"
          fi
      - name: Commit and push template
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -am "Auto-update of E2E template"
          git push origin HEAD:${{ github.event.pull_request.head.ref }}
      - name: Create PR comment
        if: steps.check_changes.outputs.changes == 'true'
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'E2E template updates in `examples/e2e` have been pushed.'
            })
  update-nlp-template-to-examples:
    name: update-nlp-template-to-examples
    runs-on: ${{ inputs.os }}
    env:
      ZENML_DEBUG: 1
      ZENML_ANALYTICS_OPT_IN: false
      PYTHONIOENCODING: utf-8
      OBJC_DISABLE_INITIALIZE_FORK_SAFETY: 'YES'
    if: github.event_name == 'pull_request' && ! startsWith(github.event.head_commit.message,
      'GitBook:')
    defaults:
      run:
        shell: bash
    steps:
      - name: Run template tests for zenml-io/template-nlp
        uses: zenml-io/template-nlp/.github/actions/nlp_template_test@main
        with:
          python-version: ${{ inputs.python-version }}
          stack-name: local
          ref-zenml: ${{ github.ref }}
          ref-template: 2025.01.08  # Make sure it is aligned with ZENML_PROJECT_TEMPLATES from src/zenml/cli/base.py
      - name: Clean-up
        run: |
          rm -rf ./local_checkout
      - name: message-on-error
        if: failure()
        run: |
          echo "::error title=zenml-io/template-nlp project template testing failed with new version of ZenML core!::\
            Breaking changes affecting templates have been introduced. To mitigate this issue,\
            please make the code in zenml-io/template-nlp compatible with new version of\
            ZenML core, release it and update release tag in zenml.cli.base.ZENML_PROJECT_TEMPLATES"
      - uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Check-out fresh NLP template
        run: |
          mkdir -p examples/e2e_nlp
          printf 'info@zenml.io' | zenml init --path examples/e2e_nlp --template nlp --template-with-defaults
          pip install yamlfix
          bash scripts/format.sh examples/e2e_nlp
      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet "origin/${{ github.event.pull_request.head.ref }}"; then
            echo "No active Git changes found."
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "vvv Active Git changes found vvv"
            echo "changes=true" >> $GITHUB_OUTPUT
            git diff "origin/${{ github.event.pull_request.head.ref }}"
          fi
      - name: Commit and push template
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -am "Auto-update of NLP template"
          git push origin HEAD:${{ github.event.pull_request.head.ref }}
      - name: Create PR comment
        if: steps.check_changes.outputs.changes == 'true'
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'NLP template updates in `examples/e2e_nlp` have been pushed.'
            })
  update-starter-template-to-examples:
    name: update-starter-template-to-examples
    runs-on: ${{ inputs.os }}
    env:
      ZENML_DEBUG: 1
      ZENML_ANALYTICS_OPT_IN: false
      PYTHONIOENCODING: utf-8
      OBJC_DISABLE_INITIALIZE_FORK_SAFETY: 'YES'
    if: github.event_name == 'pull_request' && ! startsWith(github.event.head_commit.message,
      'GitBook:')
    defaults:
      run:
        shell: bash
    steps:
      - name: Run template tests for zenml-io/template-starter
        uses: zenml-io/template-starter/.github/actions/starter_template_test@main
        with:
          python-version: ${{ inputs.python-version }}
          stack-name: local
          ref-zenml: ${{ github.ref }}
          ref-template: 2024.11.28  # Make sure it is aligned with ZENML_PROJECT_TEMPLATES from src/zenml/cli/base.py
      - name: Clean-up
        run: |
          rm -rf ./local_checkout
      - name: message-on-error
        if: failure()
        run: |
          echo "::error title=zenml-io/template-starter project template testing failed with new version of 
            ZenML core!::\
            Breaking changes affecting templates have been introduced. To mitigate this issue,\
            please make the code in zenml-io/template-starter compatible with new version of\
            ZenML core, release it and update release tag in zenml.cli.base.ZENML_PROJECT_TEMPLATES"
      - uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Check-out fresh Starter template
        run: |
          rm -rf examples/mlops_starter
          mkdir -p examples/mlops_starter
          printf 'info@zenml.io' | zenml init --path examples/mlops_starter --template starter --template-with-defaults
          pip install yamlfix
          bash scripts/format.sh examples/mlops_starter
      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet "origin/${{ github.event.pull_request.head.ref }}"; then
            echo "No active Git changes found."
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "vvv Active Git changes found vvv"
            echo "changes=true" >> $GITHUB_OUTPUT
            git diff "origin/${{ github.event.pull_request.head.ref }}"
          fi
      - name: Commit and push template
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -am "Auto-update of Starter template"
          git push origin HEAD:${{ github.event.pull_request.head.ref }}
      - name: Create PR comment
        if: steps.check_changes.outputs.changes == 'true'
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |-
            github.rest.issues.createComment({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Classification template updates in `examples/mlops_starter` have been pushed.'
            })
  update-llm-finetuning-template-to-examples:
    name: update-llm-finetuning-template-to-examples
    runs-on: ${{ inputs.os }}
    env:
      ZENML_DEBUG: 1
      ZENML_ANALYTICS_OPT_IN: false
      PYTHONIOENCODING: utf-8
      OBJC_DISABLE_INITIALIZE_FORK_SAFETY: 'YES'
    if: github.event_name == 'pull_request' && ! startsWith(github.event.head_commit.message,
      'GitBook:')
    defaults:
      run:
        shell: bash
    steps:
      - name: Run template tests for zenml-io/template-llm-finetuning
        uses: zenml-io/template-llm-finetuning/.github/actions/llm_finetuning_template_test@main
        with:
          python-version: ${{ inputs.python-version }}
          ref-zenml: ${{ github.ref }}
          ref-template: 2024.11.28  # Make sure it is aligned with ZENML_PROJECT_TEMPLATES from src/zenml/cli/base.py
      - name: Clean-up
        run: |
          rm -rf ./local_checkout
      - name: message-on-error
        if: failure()
        run: |
          echo "::error title=zenml-io/template-llm-finetuning project template testing failed with new version of ZenML core!::\
            Breaking changes affecting templates have been introduced. To mitigate this issue,\
            please make the code in zenml-io/template-llm-finetuning compatible with new version of\
            ZenML core, release it and update release tag in zenml.cli.base.ZENML_PROJECT_TEMPLATES"
      - uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Check-out fresh LLM Finetuning template
        run: |
          rm -rf examples/llm_finetuning
          mkdir -p examples/llm_finetuning
          printf 'info@zenml.io' | zenml init --path examples/llm_finetuning --template llm_finetuning --template-with-defaults
          pip install yamlfix
          bash scripts/format.sh examples/llm_finetuning
      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet "origin/${{ github.event.pull_request.head.ref }}"; then
            echo "No active Git changes found."
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "vvv Active Git changes found vvv"
            echo "changes=true" >> $GITHUB_OUTPUT
            git diff "origin/${{ github.event.pull_request.head.ref }}"
          fi
      - name: Commit and push template
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -am "Auto-update of LLM Finetuning template"
          git push origin HEAD:${{ github.event.pull_request.head.ref }}
      - name: Create PR comment
        if: steps.check_changes.outputs.changes == 'true'
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |-
            github.rest.issues.createComment({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'LLM Finetuning template updates in `examples/llm_finetuning` have been pushed.'
            })
