---
name: Setup Python Environment, Lint and Unit Test
on:
  workflow_call:
    inputs:
      os:
        description: OS
        type: string
        required: true
      python-version:
        description: Python version
        type: string
        required: true
      enable_tmate:
        description: Enable tmate session for debugging
        type: string
        required: false
        default: never
      install_integrations:
        description: Install ZenML integrations
        type: string
        required: false
        default: 'yes'
      git-ref:
        description: Git branch or ref
        type: string
        required: false
        default: ''
  workflow_dispatch:
    inputs:
      os:
        description: OS
        type: choice
        options: [ubuntu-latest, macos-13, windows-latest]
        required: false
        default: ubuntu-latest
      python-version:
        description: Python version
        type: choice
        options: ['3.9', '3.10', '3.11', '3.12']
        required: false
        default: '3.11'
      enable_tmate:
        description: Enable tmate session for debugging
        type: choice
        options: [no, on-failure, always, before-tests]
        required: false
        default: 'no'
      git-ref:
        description: Git branch or ref
        type: string
        required: false
        default: ''
jobs:
  unit-test:
    name: unit-test
    runs-on: ${{ inputs.os }}
    env:
      ZENML_DEBUG: 1
      ZENML_ANALYTICS_OPT_IN: false
      PYTHONIOENCODING: utf-8
      UV_HTTP_TIMEOUT: 600
      OBJC_DISABLE_INITIALIZE_FORK_SAFETY: 'YES'
    if: ${{ ! startsWith(github.event.head_commit.message, 'GitBook:') && ! (inputs.os == 'windows-latest' && inputs.python-version == '3.11') && ! (inputs.os == 'windows-latest' && inputs.python-version == '3.12') }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0  # Fetch all history for all branches and tags
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: |
            uv-${{ runner.os }}-${{ inputs.python-version }}-${{ hashFiles('src/zenml/integrations/*/__init__.py') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ inputs.python-version }}-${{ hashFiles('src/zenml/integrations/*/__init__.py') }}
      - name: Install libomp
        if: ${{ inputs.os == 'macos-latest' || inputs.os == 'macos-13' }}
        run: brew install libomp
      - name: Setup environment
        uses: ./.github/actions/setup_environment
        with:
          cache_version: ${{ secrets.GH_ACTIONS_CACHE_KEY }}
          python-version: ${{ inputs.python-version }}
          os: ${{ inputs.os }}
          install_integrations: ${{ inputs.install_integrations }}
      - name: Setup tmate session before tests
        if: ${{ inputs.enable_tmate == 'before-tests' }}
        uses: mxschmitt/action-tmate@v3.17
      - name: Run unit tests
        run: |
          bash scripts/test-coverage-xml.sh unit
        env:
          ZENML_ANALYTICS_OPT_IN: false
          ZENML_DEBUG: true
      - name: Setup tmate session after tests
        if: ${{ inputs.enable_tmate == 'always' || (inputs.enable_tmate == 'on-failure' && failure()) }}
        uses: mxschmitt/action-tmate@v3.17
      - name: Verify Python Env unaffected
        run: |-
          zenml integration list
          uv pip list
          uv pip check || true
