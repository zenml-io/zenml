---
name: TEST_RELEASE_PREPARE
on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
env:
  ZENML_ANALYTICS_OPT_IN: false
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  fetch-versions:
    if: github.repository == 'zenml-io/zenml'
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.get-version.outputs.new_version }}
    steps:
      # Check out the PR branch
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      # Extract version from VERSION file
      - name: Get version from VERSION file
        id: get-version
        run: |
          NEW_VERSION=$(cat src/zenml/VERSION)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $NEW_VERSION"
  build-test-images:
    runs-on: ubuntu-latest
    needs: [fetch-versions]
    permissions:
      contents: read
      id-token: write
    steps:
      # Check out the prepare-release branch
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      # Sign in to Google
      - uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_email: ${{ secrets.GCP_CLOUDBUILD_EMAIL }}
          service_account_key: ${{ secrets.GCP_CLOUDBUILD_KEY }}
          project_id: ${{ secrets.GCP_CLOUDBUILD_PROJECT }}
      # Submit the Cloudbuild job
      - name: Build docker images
        run: |
          gcloud builds submit \
            --quiet \
            --config=release-cloudbuild-preparation.yaml \
            --substitutions=_ZENML_BRANCH=${{ github.ref }},_ZENML_NEW_VERSION=${{ needs.fetch-versions.outputs.new_version }}
      # Sign in to AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::715803424590:role/gh-action-role-zenml-quickstart-ecr
          aws-region: eu-central-1
      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login 715803424590.dkr.ecr.eu-central-1.amazonaws.com --username AWS --password-stdin
      # Publish the AWS image
      - name: Pull quickstart image from Dockerhub
        run: |
          docker pull zenmldocker/prepare-release:quickstart-aws-${{ needs.fetch-versions.outputs.new_version }}
      - name: Push quickstart image to ECR
        run: |
          docker tag zenmldocker/prepare-release:quickstart-aws-${{ needs.fetch-versions.outputs.new_version }} 715803424590.dkr.ecr.eu-central-1.amazonaws.com/prepare-release:quickstart-aws-${{ needs.fetch-versions.outputs.new_version }}
          docker push 715803424590.dkr.ecr.eu-central-1.amazonaws.com/prepare-release:quickstart-aws-${{ needs.fetch-versions.outputs.new_version }}
  setup-prep-release-tenant:
    needs: [fetch-versions, build-test-images]
    env:
      ZENML_STORE_URL: ${{ secrets.RELEASE_TENANT_URL }}
      ZENML_STORE_API_KEY: ${{ secrets.RELEASE_TENANT_SERVICE_ACCOUNT_KEY }}
    runs-on: ubuntu-latest
    steps:
      # Check out the code
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      # Setting up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      # Install requests
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      # Deactivate and redeploy the tenant
      - name: Run tenant management script
        env:
          CLOUD_STAGING_CLIENT_ID: ${{ secrets.CLOUD_STAGING_CLIENT_ID }}
          CLOUD_STAGING_CLIENT_SECRET: ${{ secrets.CLOUD_STAGING_CLIENT_SECRET }}
          RELEASE_TENANT_ID: ${{ secrets.RELEASE_TENANT_ID }}
          ZENML_NEW_VERSION: ${{ needs.fetch-versions.outputs.new_version }}
        run: python scripts/redeploy-release-prep-tenant.py
  run_quickstart_pipelines:
    needs: [fetch-versions, setup-prep-release-tenant]
    runs-on: ubuntu-latest
    env:
      ZENML_STORE_URL: ${{ secrets.RELEASE_TENANT_URL }}
      ZENML_STORE_API_KEY: ${{ secrets.RELEASE_TENANT_SERVICE_ACCOUNT_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - cloud: aws
            parent_image: 715803424590.dkr.ecr.eu-central-1.amazonaws.com/prepare-release:quickstart-aws
          - cloud: azure
            parent_image: zenmldocker/prepare-release:quickstart-azure
          - cloud: gcp
            parent_image: zenmldocker/prepare-release:quickstart-gcp
    steps:
      # Check out the code
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      # Setting up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      # ZenML Integrations
      - name: Install ZenML
        run: |
          scripts/install-zenml-dev.sh --system --integrations "no"
      - name: Check Docker
        run: |
          docker --version
          docker info
      - name: Run Quickstart release flow on ${{ matrix.cloud }}
        run: |-
          scripts/qs_run_release_flow.sh \
            --cloud "${{ matrix.cloud }}" \
            --parent-image "${{ matrix.parent_image }}" \
            --new-version "${{ needs.fetch-versions.outputs.new_version }}" \
            --branch-ref "${{ github.ref }}"
