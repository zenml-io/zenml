---
name: Install ZenML
description: Install ZenML, most integrations, loads/uploads cached venv and pip download
  cache if applicable
inputs:
  cache_version:
    description: Value gets appended to the cache key and will therefore invalidate
      the cache if it changes
    required: true
  python-version:
    description: Python version
    required: true
  os:
    description: OS
    required: true
  install_integrations:
    description: Install ZenML integrations
    required: false
    default: 'yes'
runs:
  using: composite
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: ${{ inputs.python-version }}
    - name: Delete error-causing bash
      shell: bash
      if: ${{ inputs.os == 'windows-latest' }}
      run: rm.exe "C:/WINDOWS/system32/bash.EXE"
    - name: Set path to bash for example runner
      shell: bash
      if: ${{ inputs.os == 'windows-latest' }}
      run: |
        echo "SHELL_EXECUTABLE=C:\Program Files\Git\bin\bash.exe" >> $GITHUB_ENV
    - name: Configure git (non-Windows)
      if: ${{ inputs.os != 'windows-latest' }}
      shell: bash
      run: |
        git config --global user.email "info@zenml.io"
        git config --global user.name "ZenML GmbH"
    - name: Configure git (Windows)
      if: ${{ inputs.os == 'windows-latest' }}
      shell: bash
      run: |
        "C:\Program Files\Git\bin\git.exe" config --global user.email "info@zenml.io"
        "C:\Program Files\Git\bin\git.exe" config --global user.name "ZenML
        GmbH"
    - name: Install Terraform (Windows)
      if: ${{ inputs.os == 'windows-latest' }}
      shell: bash
      run: choco install terraform -y
    - name: Install Terraform (Mac)
      if: ${{ inputs.os == 'macos-13' || inputs.os == 'macos-latest' }}
      shell: bash
      run: |
        brew tap hashicorp/tap
        brew install hashicorp/tap/terraform
    - name: Install ZenML and dependencies
      shell: bash
      run: |
        scripts/install-zenml-dev.sh --system --integrations ${{ inputs.install_integrations }}
    - name: Check Python environment
      shell: bash
      run: |-
        zenml integration list
        uv pip list
        uv pip check || true
