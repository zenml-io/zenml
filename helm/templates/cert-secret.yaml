{{- if and .Values.zenml.ingress.enabled .Values.zenml.ingress.tls.enabled .Values.zenml.ingress.tls.generateCerts -}}

{{- $certSubjectName := .Values.zenml.ingress.host -}}

{{- $prevServerSecret := (lookup "v1" "Secret" .Release.Namespace .Values.zenml.ingress.tls.secretName) -}}
{{- if or .Release.IsInstall (not $prevServerSecret) }}
{{- $_ := set . "regenerateCerts" true -}}
{{- else if eq (index $prevServerSecret.metadata.annotations "zenml.certs/subject-name") $certSubjectName }}
{{- $_ := set . "regenerateCerts" false -}}
{{- else }}
{{- $_ := set . "regenerateCerts" true -}}
{{- end }}

{{- if .regenerateCerts }}

{{- $caCert := genCA "zenml-ca" 365 -}}
{{- $serverCert := genSignedCert $certSubjectName nil (list $certSubjectName) 365 $caCert -}}

{{- $_ := set . "caCert" $caCert.Cert -}}
{{- $_ := set . "serverCert" $serverCert.Cert -}}
{{- $_ := set . "serverKey" $serverCert.Key -}}

{{- else }}

{{- $_ := set . "caCert" (index $prevServerSecret.data "ca.crt" | b64dec) -}}
{{- $_ := set . "serverCert" (index $prevServerSecret.data "tls.crt" | b64dec) -}}
{{- $_ := set . "serverKey" (index $prevServerSecret.data "tls.key" | b64dec) -}}

{{- end }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.zenml.ingress.tls.secretName }}
  labels:
    {{- include "zenml.labels" . | nindent 4 }}
  annotations:
    zenml.certs/subject-name: {{ $certSubjectName}}
type: kubernetes.io/tls
data:
  tls.crt: {{ .serverCert | b64enc | quote }}
  tls.key: {{ .serverKey  | b64enc | quote }}
  ca.crt: {{ .caCert | b64enc | quote }}

{{- end }}
