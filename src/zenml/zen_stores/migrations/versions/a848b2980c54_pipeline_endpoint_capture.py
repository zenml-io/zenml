"""pipeline endpoint + capture [a848b2980c54].

Revision ID: a848b2980c54
Revises: aae4eed923b5
Create Date: 2025-09-07 18:04:15.320419

"""

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "a848b2980c54"
down_revision = "aae4eed923b5"
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema and/or data, creating a new revision."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "pipeline_endpoint",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("project_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column(
            "status", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("url", sa.TEXT(), nullable=True),
        sa.Column("auth_key", sa.TEXT(), nullable=True),
        sa.Column(
            "endpoint_metadata",
            sa.String(length=16777215).with_variant(
                mysql.MEDIUMTEXT(), "mysql"
            ),
            nullable=False,
        ),
        sa.Column(
            "pipeline_deployment_id",
            sqlmodel.sql.sqltypes.GUID(),
            nullable=True,
        ),
        sa.Column("deployer_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["deployer_id"],
            ["stack_component.id"],
            name="fk_pipeline_endpoint_deployer_id_stack_component",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["pipeline_deployment_id"],
            ["pipeline_deployment.id"],
            name="fk_pipeline_endpoint_pipeline_deployment_id_pipeline_deployment",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["project.id"],
            name="fk_pipeline_endpoint_project_id_project",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name="fk_pipeline_endpoint_user_id_user",
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "name",
            "project_id",
            name="unique_pipeline_endpoint_name_in_project",
        ),
    )
    with op.batch_alter_table("pipeline_deployment", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("capture_memory_only", sa.Boolean(), nullable=False)
        )
        batch_op.add_column(
            sa.Column("capture_code", sa.Boolean(), nullable=False)
        )
        batch_op.add_column(
            sa.Column("capture_logs", sa.Boolean(), nullable=False)
        )
        batch_op.add_column(
            sa.Column("capture_metadata", sa.Boolean(), nullable=False)
        )
        batch_op.add_column(
            sa.Column("capture_visualizations", sa.Boolean(), nullable=False)
        )
        batch_op.add_column(
            sa.Column("capture_metrics", sa.Boolean(), nullable=False)
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema and/or data back to the previous revision."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("pipeline_deployment", schema=None) as batch_op:
        batch_op.drop_column("capture_metrics")
        batch_op.drop_column("capture_visualizations")
        batch_op.drop_column("capture_metadata")
        batch_op.drop_column("capture_logs")
        batch_op.drop_column("capture_code")
        batch_op.drop_column("capture_memory_only")

    op.drop_table("pipeline_endpoint")
    # ### end Alembic commands ###
